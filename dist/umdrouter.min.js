/*! umdrouter - v0.5.0 - 2014-01-13 */
!function(a, b) {
    "function" == typeof define && define.amd ? define([], b) : "object" == typeof exports ? module.exports = b() : a.UMDRouter = b();
}(this, function() {
    var a = function() {
        var a = this;
        window.onhashchange = function() {
            a.process();
        }, window.onload = function() {
            a.process();
        };
    };
    return a.prototype.routes = {}, a.prototype.history = [], a.prototype.process = function() {
        var b = this, c = window.location.hash.replace("#", ""), d = b.match(), e = d.route, f = d.args, g = !1, h = null, i = [];
        if (0 !== b.history.length && (g = b.routes[b.history[b.history.length - 1].matcher]), 
        e) {
            if (i = b.routes[e], g && g.unload) {
                g.unload.apply(this);
                for (var j in a.unloadFunctions) a.unloadFunctions[j].apply(h);
            }
            var k = function(a) {
                if ("undefined" == typeof a && (a = !0), a || b.go(b.history[b.history.length - 1].fragment), 
                i.load) {
                    var d = b.createSandbox(e);
                    h = d, i.load.apply(d, f), b.history.push({
                        matcher: e,
                        fragment: c
                    });
                }
            };
            return i.before ? (f.unshift(k), i.before.apply(this, f), void 0) : (k(!0), void 0);
        }
    }, a.prototype.createSandbox = function(b) {
        var c, d = {}, e = this.routes[b];
        for (c in e.extend) d[c] = "function" == typeof e.extend[c] ? e.extend[c].bind(d) : e.extend[c];
        for (c in a.extensions) d[c] = "function" == typeof a.extensions[c] ? a.extensions[c].bind(d) : a.extensions[c];
        return d;
    }, a.prototype.match = function() {
        var a, b, c, d, e = this, f = window.location.hash.replace("#", ""), g = [], h = !1;
        if ("/" === f || "" === f && e.routes.hasOwnProperty("/")) h = "/"; else for (b in e.routes) if (a = f.match(new RegExp(b.replace(/:[^\s/]+/g, "([\\w-]+)"))), 
        null !== a && "/" !== b) {
            if (g = [], a.length > 1) for (c = 1, d = a.length; d > c; c++) g.push(a[c]);
            h = {
                route: b,
                args: g
            };
        }
        return h;
    }, a.prototype.reload = function() {
        this.process();
    }, a.prototype.on = function(a, b) {
        var c = {};
        if ("function" == typeof b) c.load = b; else {
            if ("object" != typeof b) throw "Error creating route: " + a + ". `handler` must be a function or object.";
            c = b;
        }
        this.defaults(c, {
            before: null,
            load: null,
            unload: null,
            extend: {}
        }), this.routes[a] = c;
    }, a.prototype.defaults = function(a, b) {
        a = a || {};
        for (var c in b) a[c] || (a[c] = b[c]);
    }, a.prototype.go = function(a) {
        var b, c = window.location, d = c.pathname.replace(/[^\/]$/, "$&"), e = this;
        b = a.length ? d + c.search + "#" + a : d + c.search, history.pushState ? (history.pushState(null, document.title, b), 
        e.process()) : (c.replace(d + b), e.process());
    }, a.extensions = {}, a.extend = function(b) {
        if ("object" != typeof b) throw "Invalid extension specified.";
        for (var c in b) a.extensions[c] = b[c];
    }, a.unloadFunctions = [], a.unload = function(b) {
        if ("function" != typeof b) throw "Invalid callback function specified.";
        a.unloadFunctions.push(b);
    }, a;
});